# from decouple import config # Alternate way
from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
from cassandra.cqlengine import connection # for more persistant connection for fastapi
import pathlib
from . import config  
import os
# import json

# NOTE "vector" refers to a database specifically designed for storing and querying data represented as vectors (arrays of numbers), which is ideal for similarity search tasks in AI applications like semantic search, while "non-vector" refers to a traditional database that stores data in key-value pairs, suitable for general data storage where exact matches are needed, not necessarily similarity-based searches; essentially, a "vector" AstraDB is optimized for AI workloads using vector embeddings, while a "non-vector" AstraDB is for more standard database operations. 

# NOTE Vector : Opt for this when your application involves semantic search, recommendations, or any scenario where you need to perform nearest-neighbor searches on vector embeddings. It’s ideal for AI/ML applications such as image/text similarity, chatbots, or content-based recommendation systems.

# NOTE Non Vector : Use this for most traditional workloads—transactional data, operational applications, logging, and any case where you need flexible, scalable NoSQL storage with well‑defined schema elements and fast CRUD operations.

os.environ["CQLENG_ALLOW_SCHEMA_MANAGEMENT"] = "1"  # Set it to true

settings = config.get_settings()

BASE_DIR = pathlib.Path(__file__).resolve().parent

# Certificates, keys, trust stores, config, etc. to make a secure connection.
ASTRADB_CONNECT_BUNDLE = BASE_DIR / "connect_bundle"/ "astradb_connect.zip"
ASTRADB_CLIENT_ID = settings.astradb_client_id
ASTRADB_CLIENT_SECRET = settings.astradb_client_secret
# ASTRADB_CLIENT_ID = config("ASTRADB_CLIENT_ID")
# ASTRADB_CLIENT_SECRET = config("ASTRADB_CLIENT_SECRET")

def get_session():
    # This secure connect bundle is autogenerated when you download your SCB, 
    # if yours is different update the file name below
    cloud_config= {
    'secure_connect_bundle': ASTRADB_CONNECT_BUNDLE
    }

    # This token JSON file is autogenerated when you download your token, 
    # if yours is different update the file name below
    # with open("govindsomaniact@gmail.com-token.json") as f:
    #     secrets = json.load(f)

    # CLIENT_ID = secrets["clientId"]
    # CLIENT_SECRET = secrets["secret"]

    auth_provider = PlainTextAuthProvider(ASTRADB_CLIENT_ID, ASTRADB_CLIENT_SECRET)
    cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider, connect_timeout=100)  # Can increase timeout here if connectivity issue
    session = cluster.connect()
    connection.register_connection(str(session), session=session)  # Add a connection to the connection registry
    connection.set_default_connection(str(session))  # Set it as default
    return session